which(is.na(data[,time_cols]))
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
which(is.na(new_time))
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
timestep
starttime
endtime
doy
hod
tstepsize
hod
strptime(starttime, "%Y%m%d%H%M") + tstepsize * 60
strptime(starttime, "%Y%m%d%H%M")
tstepsize
tstepsize*60
strptime(starttime, "%Y%m%d%H%M") + tstepsize * 60
strptime(starttime, "%Y%m%d%H%M")
strptime(starttime, "%Y%m%d%H%M") -1
strptime(starttime, "%Y%m%d%H%M") +1
strptime(starttime, "%Y%m%d%H%M") +180
strptime(starttime, "%Y%m%d%H%M") +1800
strptime(starttime, "%Y%m%d%H%M") +1700
strptime(starttime, "%Y%m%d%H%M") +1799
strptime(starttime, "%Y%m%d%H%M") +1799.5
strptime(starttime, "%Y%m%d%H%M") +1801
strptime(starttime, "%Y%m%d%H%M") +180
strptime(starttime, "%Y%m%d%H%M") +1800
strptime(starttime, "%Y%m%d%H%M") +1801
strptime(starttime, "%Y%m%d%H%M") +3600
?strptime
strptime(starttime, "%Y%m%d%H%M", usetz=FALSE) +3600
strptime(starttime, "%Y%m%d%H%M", tz=FALSE) +3600
strptime(starttime, "%Y%m%d%H%M", tz="AEST") +3600
strptime(starttime, "%Y%m%d%H%M", tz="GMT") +3600
strptime(starttime, "%Y%m%d%H%M", tz="GMT") +1800
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
starttime
endtime
is.na(starttime)
is.na(endtime)
strptime(endtime,  "%Y%m%d%H%M") <  strptime(starttime,  "%Y%m%d%H%M")
strptime(endtime,  "%Y%m%d%H%M")
strptime(starttime,  "%Y%m%d%H%M")
strptime(endtime,  "%Y%m%d%H%M") <  strptime(starttime,  "%Y%m%d%H%M", tz="GMT")
strptime(endtime,  "%Y%m%d%H%M")
strptime(starttime,  "%Y%m%d%H%M", tz="GMT")
strptime(endtime,  "%Y%m%d%H%M", tz="GMT") <  strptime(starttime,  "%Y%m%d%H%M", tz="GMT")
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
test1 <- strptime(new_time[1,],"%Y%m%d%H%M", tz="GMT" )
test2 <- strptime(new_time[2,],"%Y%m%d%H%M", tz="GMT" )
range(test2-test1)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnames(FluxData)
unique(tcol$all_names)
colnames(FluxData)
c(time_vars, colnames(FluxData)[(length(time_vars)+1):ncol(FluxData)])
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnames(FluxData)
(length(time_vars)+1):ncol(FluxData)
colnames(FluxData) <- c(time_vars, colnames(FluxData)[(length(time_vars)+1):ncol(FluxData)])
colnames(FluxData)
unique(tcol$all_names)
tcol$time_names
tcol$names
time_ind <- sapply(time_vars, function(x) which(colnames(FluxData)==x))
tcol$all_names
tcol$time_names
tcol$time_names
tcol$names
tcol$all_names
length(tcol$all_names)
length(tcol$names)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnames(FluxData)
unique(tcol$all_names)
dim(FluxData)
length(FluxData)
FluxData
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnames(FluxData)
dim(FluxData)
c(time_vars, colnames(FluxData)[(length(time_vars)+1):ncol(FluxData)])
colnames(FluxData) <- c(time_vars, colnames(FluxData)[(length(time_vars)+1):ncol(FluxData)])
datasetname=="LaThuile"
colnames(FluxData)
dim(FluxData)
any(colnames(FluxData) != unique(tcol$all_names))
unique(tcol$all_names)
colnames(FluxData)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnames(FluxData)
unique(tcol$all_names)
tcol$time_names
tcol$all_names
datasetname=="LaThuile"
FluxData
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnmaes(FluxData)
colnames(FluxData)
tcol$names
tcol$all_names
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
colnames(FluxData)
colnames(FluxData) != unique(tcol$all_names)
any(colnames(FluxData) != unique(tcol$all_names))
unique(tcol$all_names)
colnames(FluxData)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
tcol$classes
test=read.csv(infiles[grepl(y, infiles)],
header=TRUE,
colClasses=tcol$classes)
unlist(tcol$classes)
infiles[grepl(y, infiles)]
test=read.csv(infiles[grepl(y, infiles)],
header=TRUE)
var_file <- "~/Documents/FLUXNET2016_processing/scripts/data//Output_variables_LaThuile.csv"
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
vars <- read.csv(var_file, header=TRUE,
colClasses=c("character", "character", "character",
"character", "character", "character",
"character",
"numeric",   "numeric",
"logical", "logical",
"character"))
#Name of time stamp variables
if(datasetname=="LaThuile"){
time_vars <- c("Year", "DoY", "Time", "DTIME")
} else {
time_vars <- c("TIMESTAMP_START", "TIMESTAMP_END")
}
#Set QC flag variable name (differs for Fluxnet2015 and LaThuile)
if(datasetname=="LaThuile"){
qc_name <- "fqc"
} else {
qc_name <- "QC"
}
#Read site information (lon, lat, elevation)
site_info <- get_site_metadata(site_code)
#Log possible warnings and remove warnings from output var
site_log <- log_warning(warn=site_info$warn, site_log)
site_info <- site_info$out
#Should site be excluded? If so, abort and print reason.
#This option is set in the site info file (inside data folder)
#Mainly excludes sites with mean annual ET excluding P, implying
#irrigation or other additional water source.
if(site_info$Exclude){
error <- paste("Site not processed. Reason:", site_info$Exclude_reason,
". This is set in site info file, change >Exclude< options",
"in the file to process site")
stop_and_log(error, site_log)
}
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
data <- rbind(data, read.csv(infiles[grepl(y, infiles)],
header=TRUE,
colClasses=tcol$classes))
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
timestep
as.numeric(timestep)
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
timestep
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/Constants.R')
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
timestep
source('~/Documents/FLUXNET2016_processing/scripts/R/Timing_general.R')
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
dim(new_time)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs)
CheckCSVTiming(DataFromText, site_log)
#Replace vars with those found in file
vars <- DataFromText$vars
infile
convert_fluxnet_to_netcdf(infile, site_code, out_path)
devtools::document()
setwd("~/Documents/FLUXNET2016_processing/scripts")
devtools::document()
install_github
library(devtools)
install_github
?install_github
devtools::install_github("aukkola/FluxnetLSM", ref="development")
convert_fluxnet_to_netcdf(infile, site_code, out_path)
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile")
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile")
dim(DataFromText$data)
DataFromText <- FillQCvarMissing(datain=DataFromText, missingVal=Sprd_MissingVal,
gapfillVal=QC_gapfilled)
data_vars
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile")
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile")
source('~/Documents/FLUXNET2016_processing/scripts/R/Check_and_Gapfill.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile")
ins
ind
data_vars
qc_ind
qc_ind
qc_vars
data_vars
ind
k
ind <- which(datain$data[data_vars[k]]!=missingVal &
datain$data[qc_vars[k]]==missingVal)
data_vars
colnames(indata$data)
colnames(datain$data)
source('~/Documents/FLUXNET2016_processing/scripts/R/Check_and_Gapfill.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile")
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=30)
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=50, gapfill_all=50)
qc_var
qc_var
datain$vars
paste(datain$vars[k], qc_name, sep="")
which(datain$vars==paste(datain$vars[k], qc_name, sep=""))
qc_var
k
perc_gapfilled
perc_missing
yr_ind
yr_keep
gaps
miss
eval_remove
yr_ind
exclude_yr
gaps[essential_ind] > threshold
gaps[preferred_ind] > threshold
miss[essential_ind] > missing
miss[preferred_ind] > missing
k=1
gaps <- sapply(perc_gapfilled, function(x) x[,k])
miss <- sapply(perc_missing, function(x) x[k])
source('~/Documents/FLUXNET2016_processing/scripts/R/Check_and_Gapfill.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=50, gapfill_all=50)
yr_keep
miss[essential_ind] > missing
miss
gaps
k=2
perc_missing
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=50, gapfill_all=50)
source('~/Documents/FLUXNET2016_processing/Testing_LaThuile.R')
infile
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/Check_and_Gapfill.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
devtools:document()
devtools::document()
devtools::install_github("aukkola/FluxnetLSM", ref="development")
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
k
datain$vars
datain$vars[k]
dim(Data)
dim(data)
length(data)
all(data==missingval)
range(data)
range(data,na.rm=T)
length(which(is.na(data)))
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
missingval
missingval
missingval
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
missingval
min_yrs
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
Sprd_MissingVal
missingval=Sprd_MissingVal
# Read text file containing flux data:
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs,
missingval=Sprd_MissingVal)
missingval
min_yrs
fair_use
1
DataFromText <- ReadCSVFluxData(fileinname=infile, vars=vars,
datasetname=datasetname,
time_vars=time_vars, site_log,
min_yrs=min_yrs,
missingval=missingval)
missingval
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
# Read text file containing flux data:
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
Sprd_MissingVal
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
missingval
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
perc_missing
perc_gapfilled
perc_missing
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
devtools::document()
devtools::install_github("aukkola/FluxnetLSM", ref="development")
library(FluxnetLSM)
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
infiles
tet <- lapply(infiles, read.csv, header=TRUE)
range(tet[[1]]$Ta_f)
any(tet[[1]]$Ta_f > -9999 & tet[[1]]$Ta_f < 0)
any(tet[[2]]$Ta_f > -9999 & tet[[2]]$Ta_f < 0)
any(tet[[3]]$Ta_f > -9999 & tet[[3]]$Ta_f < 0)
any(tet[[4]]$Ta_f > -9999 & tet[[4]]$Ta_f < 0)
any(tet[[5]]$Ta_f > -9999 & tet[[5]]$Ta_f < 0)
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
k
k
datain$vars[k]
range(data)
which(data > -9999 & data < 0)
length(which(data > -9999 & data < 0))
length(data)
data[129557]
-9999 - 273.15
-9999 + 273.15
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
test <- which(datain$data[[k]] < 0)
test[missing_ind] <- NA
test <- datain$data[[k]]
test[missing_ind] <- NA
test1 <- which(test < 0)
length(test1)
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
colnames(datain$data)
k
colnames(datain$data)[16]
test <- datain$data[[k]]
test[missing_ind] <- NA
length(which(test < 0))
test1 <- which(test < 0)
test[1]
test[2]
test[1:20]
datain$vars
datain$units
datain$time[1,1]
test[1:20]
test[1]
test1[1]
-1*(1/2.3)
source('~/Documents/FLUXNET2016_processing/scripts/R/Conversions.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20)
data_vars[n]
data_vars[n]
5*(1/2.3)
devtools::document()
fair_use
fair_use_vec
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20, fair_use=fair_use, fair_use_vec=fair_use_vec )
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20, fair_use=fair_use, fair_use_vec=fair_use_vec )
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20, fair_use=fair_use, fair_use_vec=fair_use_vec )
fair_use
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20, fair_use=fair_use, fair_use_vec=fair_use_vec )
fair_use
source('~/Documents/FLUXNET2016_processing/scripts/R/ConvertSpreadsheetToNcdf.R')
source('~/Documents/FLUXNET2016_processing/scripts/R/FluxtowerSpreadsheetToNc.R')
fair_use
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20, fair_use=fair_use, fair_use_vec=fair_use_vec )
devtools::install_github("aukkola/FluxnetLSM", ref="development")
library(FluxnetLSM)
convert_fluxnet_to_netcdf(infile, site_code, out_path, datasetname="LaThuile", missing=20, gapfill_all=20, fair_use=fair_use, fair_use_vec=fair_use_vec )
